### 环境变量定义
@baseUrl = http://localhost:3000
@contentType = application/json

@access_token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjQsImVtYWlsIjoiaGF5YXNoaWNvY29AZ21haWwuY29tIiwianRpIjoiYjc1NTI4NjAtNjM1ZC00Y2FiLWFhYTAtNTM1YTcyZTI4NjY0IiwiaWF0IjoxNzQ2ODYyMDc1LCJleHAiOjE3NDY4NjI5NzV9.t4Hv6nzlNuurgMd9l1dA71hDvBFVPMZPxjHRd_UCkn0
@refresh_token = d080e300-a66c-4d13-8963-ed939c56135c

### [1] 用户注册
# @name signup 
POST {{baseUrl}}/auth/sign-up
Content-Type: {{contentType}}

{
    "email": "testuser@example.com",
    "password": "P@ssw0rd123!"
}

### [2a] 用户登录
# @name login
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
    "email": "testuser@example.com",
    "password": "P@ssw0rd123!"
}

### [2b] 用户登录
# @name login
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
    "email": "ohnohello@example.com",
    "password": "WoXiHuanLinGuZi"
}

### [2c] 用户登录
# @name login
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
    "email": "mrxiaozi@gmail.com",
    "password": "078529hahahahakasumi"
}

### [2d] 用户登录
# @name login
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
    "email": "hayashicoco@gmail.com",
    "password": "0515hayashi"
}

### [3] 访问受保护数据 Access
GET {{baseUrl}}/api/home-data
Authorization: Bearer {{access_token}}

### [4] 验证令牌有效性 Access
GET {{baseUrl}}/api/verify-token
Authorization: Bearer {{access_token}}

### [5] 刷新访问令牌 Refresh
# @name refresh
POST {{baseUrl}}/api/refresh-token
Content-Type: {{contentType}}

{
    "refreshToken": "{{refresh_token}}"
}

### [6] 使用新令牌访问数据
GET {{baseUrl}}/api/protected-data
Authorization: Bearer {{access_token}}

### [7] 注销操作
POST {{baseUrl}}/auth/logout
Authorization: Bearer {{access_token}}
Content-Type: {{contentType}}

{
    "refreshToken": "{{refresh_token}}"
}

### [8] 失效令牌测试（应在注销后返回401）
GET {{baseUrl}}/api/protected-data
Authorization: Bearer {{access_token}}

### [1] Get All Tasks
GET {{baseUrl}}/api/tasks
Authorization: Bearer {{access_token}}
Content-Type: application/json

###

### [2] Get Task by ID
GET {{baseUrl}}/api/tasks/4
Authorization: Bearer {{access_token}}
Content-Type: application/json

###

### [3] Create a New Task
POST {{baseUrl}}/api/tasks
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "task_name": "Neeeew Task",
  "content": "This is a new task.",
  "status": "pending",
  "deadline": "2025-05-15",
  "priority": "high",
  "category_name": "Work"
}

###

### [4] Update Task by ID
PUT {{baseUrl}}/api/tasks/1
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "task_name": "Updated Task",
  "content": "This task has been updated.",
  "status": "completed",
  "deadline": "2025-05-20",
  "priority": "medium",
  "category_name": "Personal"
}

###

### [5] Delete Task by ID
DELETE {{baseUrl}}/api/tasks/1
Authorization: Bearer {{access_token}}
Content-Type: application/json

###

### [6] Get Tasks by Category
GET {{baseUrl}}/api/tasks/category/Work
Authorization: Bearer {{access_token}}
Content-Type: application/json

###

### [7] Get All Categories
GET {{baseUrl}}/api/tasks/category
Authorization: Bearer {{access_token}}
Content-Type: application/json

###

### [8] Create a New Category
POST {{baseUrl}}/api/tasks/category
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "category_name": "New11"
}

###

### [9] Update Task Status
PUT {{baseUrl}}/api/tasks/1/status
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "status": "in-progress"
}

###

### [10] Update Task Priority
PUT {{baseUrl}}/api/tasks/1/priority
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "priority": "low"
}

###

### [11] Update Task Deadline
PUT {{baseUrl}}/api/tasks/1/deadline
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "deadline": "2025-06-01"
}

###

### [12] Update Task Category
PUT {{baseUrl}}/api/tasks/1/category
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "category_name": "Updated Category"
}

###

### [13] Update Task Content
PUT {{baseUrl}}/api/tasks/1/content
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "content": "Updated task content."
}